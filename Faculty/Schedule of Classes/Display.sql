with SPAIDEN as
(
    select
        SPRIDEN.SPRIDEN_ID as SPRIDEN_ID,
        SPRIDEN.SPRIDEN_PIDM as SPRIDEN_PIDM,
        SPRIDEN.SPRIDEN_LAST_NAME as SPRIDEN_LAST_NAME,
        SPRIDEN.SPRIDEN_FIRST_NAME as SPRIDEN_FIRST_NAME,
        SPRIDEN.SPRIDEN_MI as SPRIDEN_MI,
        f_format_name(SPRIDEN.SPRIDEN_PIDM, 'LFMI') as SPRIDEN_LEGAL_NAME,
        SPRIDEN.SPRIDEN_SEARCH_LAST_NAME as SPRIDEN_SEARCH_LAST_NAME,
        SPRIDEN.SPRIDEN_SEARCH_FIRST_NAME as SPRIDEN_SEARCH_FIRST_NAME,
        SPRIDEN.SPRIDEN_SEARCH_MI as SPRIDEN_SEARCH_MI

    from
        SPRIDEN SPRIDEN

    where
        SPRIDEN.SPRIDEN_NTYP_CODE is null
        and SPRIDEN.SPRIDEN_CHANGE_IND is null
    ),

SPAPERS as
(
    select
        SPBPERS.SPBPERS_PIDM,
        SPBPERS.SPBPERS_SSN,
        SPBPERS.SPBPERS_BIRTH_DATE,
        ROUND(((SYSDATE - SPBPERS_BIRTH_DATE)/365), 0) as SPBPERS_AGE,
        SPBPERS.SPBPERS_SEX,
        SPBPERS.SPBPERS_PREF_FIRST_NAME,
        SPBPERS.SPBPERS_CITZ_CODE,
        SPBPERS_ETHN_CDE,
        case
            when SPBPERS.SPBPERS_CITZ_CODE = 'Y' then 'United States'
            else (select STVNATN_NATION
                 from STVNATN
                 where STVNATN_CODE = nvl(GOBINTL.GOBINTL_NATN_CODE_LEGAL, GOBINTL.GOBINTL_NATN_CODE_BIRTH))
            end as SPBPERS_CITZ_COUNTRY,
        SPBPERS.SPBPERS_GNDR_CODE,
        GOBINTL_NATN_CODE_BIRTH,
        f_get_desc_fnc('STVNATN', GOBINTL_NATN_CODE_BIRTH, 30) as GOBINTL_BIRTH_NATN


   from
        SPBPERS SPBPERS

        left outer join GOBINTL GOBINTL on GOBINTL.GOBINTL_PIDM = SPBPERS.SPBPERS_PIDM
   ),

GOARACE as
(
    select
        GORPRAC.GORPRAC_PIDM as GORPRAC_PIDM,
        (listagg(GORPRAC.GORPRAC_RACE_CDE,', ') within group (order by GORPRAC.GORPRAC_RACE_CDE)) as GORRACE_RACE_CDE,
        (listagg(GORRACE.GORRACE_DESC,', ') within group (order by GORRACE.GORRACE_DESC)) as GORRACE_DESC

    from
        GORPRAC GORPRAC

    left outer join GORRACE GORRACE ON GORRACE.GORRACE_RACE_CDE = GORPRAC.GORPRAC_RACE_CDE

    group by
        GORPRAC.GORPRAC_PIDM
    ),

SOREMAL as
(
    select
        GOREMAL.GOREMAL_PIDM as GOREMAL_PIDM,
        GOREMAL.GOREMAL_EMAL_CODE as GOREMAL_EMAL_CODE,
        GOREMAL.GOREMAL_EMAIL_ADDRESS as GOREMAL_EMAIL_ADDRESS,
        GOREMAL.GOREMAL_STATUS_IND as GOREMAL_STATUS_IND,
        GOREMAL.GOREMAL_PREFERRED_IND as GOREMAL_PREFFERED_IND,
        GORADID.GORADID_PIDM as GORADID_PIDM,
        GORADID.GORADID_ADDITIONAL_ID as GORADID_ADDITIONAL_ID,
        GORADID.GORADID_ADID_CODE as GORADID_ADID_CODE,
        GOBTPAC_EXTERNAL_USER as GOBTPAC_EXTERNAL_USER --esfid

    from
        GOREMAL GOREMAL

        left outer join GORADID GORADID on GORADID.GORADID_PIDM = GOREMAL.GOREMAL_PIDM
             and GORADID.GORADID_ADID_CODE = 'SUID'
        left outer join GOBUMAP GOBUMAP on GOBUMAP.GOBUMAP_PIDM = GOREMAL.GOREMAL_PIDM
        left outer join GOBTPAC GOBTPAC on GOBTPAC.GOBTPAC_PIDM = GOREMAL.GOREMAL_PIDM

    where
        GOREMAL.GOREMAL_EMAL_CODE = 'SU'
        and GOREMAL.GOREMAL_STATUS_IND = 'A'
        and GOREMAL.GOREMAL_PREFERRED_IND = 'Y'
        and GORADID.GORADID_ADID_CODE = 'SUID'
    ),

SGASTDN as
(
    select
        SGBSTDN.SGBSTDN_PIDM as SGBSTDN_PIDM,
        SGBSTDN.SGBSTDN_TERM_CODE_EFF as SGBSTDN_TERM_CODE_EFF,
        SGBSTDN.SGBSTDN_STST_CODE as SGBSTDN_STST_CODE,
        SGBSTDN.SGBSTDN_LEVL_CODE as SGBSTDN_LEVL_CODE,
        SGBSTDN.SGBSTDN_STYP_CODE as SGBSTDN_STYP_CODE,
        SGBSTDN.SGBSTDN_TERM_CODE_MATRIC as SGBSTDN_TERM_CODE_MATRIC,
        SGBSTDN.SGBSTDN_TERM_CODE_ADMIT as SGBSTDN_TERM_CODE_ADMIT,
        SGBSTDN.SGBSTDN_EXP_GRAD_DATE as SGBSTDN_EXP_GRAD_DATE,
        SGBSTDN.SGBSTDN_CAMP_CODE as SGBSTDN_CAMP_CODE,
        SGBSTDN.SGBSTDN_COLL_CODE_1 as SGBSTDN_COLL_CODE_1,
        SGBSTDN.SGBSTDN_DEGC_CODE_1 as SGBSTDN_DEGC_CODE_1,
        SGBSTDN.SGBSTDN_MAJR_CODE_1 as SGBSTDN_MAJR_CODE_1,
        SGBSTDN.SGBSTDN_MAJR_CODE_MINR_1 as SGBSTDN_MAJR_CODE_MINR_1,
        SGBSTDN.SGBSTDN_MAJR_CODE_MINR_1_2 as SGBSTDN_MAJR_CODE_MINR_1_2,
        SGBSTDN.SGBSTDN_MAJR_CODE_CONC_1 as SGBSTDN_MAJR_CODE_CONC_1,
        SGBSTDN.SGBSTDN_RESD_CODE as SGBSTDN_RESD_CODE,
        SGBSTDN.SGBSTDN_ADMT_CODE as SGBSTDN_ADMT_CODE,
        SGBSTDN.SGBSTDN_DEPT_CODE as SGBSTDN_DEPT_CODE,
        SGBSTDN.SGBSTDN_PROGRAM_1 as SGBSTDN_PROGRAM_1,
        SGBSTDN.SGBSTDN_TERM_CODE_GRAD as SGBSTDN_TERM_CODE_GRAD,
        SGBSTDN.SGBSTDN_ACTIVITY_DATE as SGBSTDN_ACTIVITY_DATE,
        f_class_calc_fnc(SGBSTDN.SGBSTDN_PIDM, SGBSTDN.SGBSTDN_LEVL_CODE, :select_term_code.STVTERM_CODE) as SGBSTDN_CLAS_CODE,
        f_Get_desc_fnc('STVSTST',SGBSTDN.SGBSTDN_STST_CODE, 30) as SGBSTDN_STST_DESC,
        f_Get_desc_fnc('STVLEVL', SGBSTDN.SGBSTDN_LEVL_CODE, 30) as SGBSTDN_LEVL_DESC,
        f_Get_desc_fnc('STVSTYP', SGBSTDN.SGBSTDN_STYP_CODE, 30) as SGBSTDN_STYP_DESC,
        f_Get_desc_fnc('STVDEGC', SGBSTDN.SGBSTDN_DEGC_CODE_1, 30) as SGBSTDN_DEGC_DESC,
        f_Get_desc_fnc('STVMAJR', SGBSTDN.SGBSTDN_MAJR_CODE_1, 30) as SGBSTDN_MAJR_DESC,
        f_Get_desc_fnc('STVMAJR', SGBSTDN.SGBSTDN_MAJR_CODE_MINR_1, 30) as SGBSTDN_MINR_1_DESC,
        f_Get_desc_fnc('STVMAJR', SGBSTDN.SGBSTDN_MAJR_CODE_MINR_1_2, 30) as SGBSTDN_MINR_1_2_DESC,
        f_Get_desc_fnc('STVMAJR', SGBSTDN.SGBSTDN_MAJR_CODE_CONC_1, 30) as SGBSTDN_CONC_DESC,
        f_Get_desc_fnc('STVRESD', SGBSTDN.SGBSTDN_RESD_CODE, 30) as SGBSTDN_RESD_DESC,
        f_Get_desc_fnc('STVADMT', SGBSTDN.SGBSTDN_ADMT_CODE, 30) as SGBSTDN_ADMT_DESC,
        f_Get_desc_fnc('STVDEPT', SGBSTDN.SGBSTDN_DEPT_CODE, 30) as SGBSTDN_DEPT_DESC,
        f_Get_desc_fnc('STVTERM', SGBSTDN.SGBSTDN_TERM_CODE_MATRIC, 30) as SGBSTDN_MATRIC_TERM_DESC,
        f_Get_desc_fnc('STVTERM', SGBSTDN.SGBSTDN_TERM_CODE_GRAD, 30) as SGBSTDN_GRAD_TERM_DESC,
        f_Get_desc_fnc('STVCLAS', f_class_calc_fnc(SGBSTDN.SGBSTDN_PIDM,SGBSTDN.SGBSTDN_LEVL_CODE, :select_term_code.STVTERM_CODE), 30) as SGBSTDN_CLAS_DESC

   from
        SGBSTDN SGBSTDN
   ),

SHAGPAR as
(
    select
        case
            when SFRTHST.SFRTHST_TMST_CODE is not null then SFRTHST.SFRTHST_TMST_CODE
            when SHRTGPA.SHRTGPA_HOURS_ATTEMPTED >= 12 then 'FT'
              else 'PT'
                end as SFRTHST_ENROLLEMENT,
        SFRTHST.SFRTHST_TERM_CODE as SFRTHST_TERM_CODE,
        SHRTGPA.SHRTGPA_PIDM as SHRTGPA_PIDM,
        SHRTGPA.SHRTGPA_LEVL_CODE as SHRTGPA_LEVL_CODE,
        SHRTGPA.SHRTGPA_GPA_TYPE_IND as SHRTGPA_GPA_TYPE_IND,
        SHRTGPA.SHRTGPA_TERM_CODE as SHRTGPA_TERM_CODE,
        SHRTGPA.SHRTGPA_HOURS_ATTEMPTED as SHRTGPA_HOURS_ATTEMPTED,
        SHRTGPA.SHRTGPA_HOURS_EARNED as SHRTGPA_HOURS_EARNED,
        SHRTGPA.SHRTGPA_GPA_HOURS as SHRTGPA_GPA_HOURS,
        SHRTGPA.SHRTGPA_GPA as SHRTGPA_GPA,
        SHRTGPA.SHRTGPA_QUALITY_POINTS as SHRTGPA_QUALITY_POINTS,
        SHRTGPA.SHRTGPA_HOURS_PASSED as SHRTGPA_HOURS_PASSED,
        SHRTGPA.SHRTGPA_SURROGATE_ID as SHRTGPA_SURROGATE_ID,
        SHRLGPA.SHRLGPA_PIDM as SHRLGPA_PIDM,
        SHRLGPA.SHRLGPA_LEVL_CODE as SHRLGPA_LEVL_CODE,
        SHRLGPA.SHRLGPA_GPA_TYPE_IND as SHRLGPA_GPA_TYPE_IND,
        SHRLGPA.SHRLGPA_HOURS_ATTEMPTED as SHRLGPA_HOURS_ATTEMPTED,
        SHRLGPA.SHRLGPA_HOURS_EARNED as SHRLGPA_HOURS_EARNED,
        SHRLGPA.SHRLGPA_GPA_HOURS as SHRLGPA_GPA_HOURS,
        SHRLGPA.SHRLGPA_GPA as SHRLGPA_GPA,
        SHRLGPA.SHRLGPA_QUALITY_POINTS as SHRLGPA_QUALITY_POINTS,
        SHRLGPA.SHRLGPA_SURROGATE_ID as SHRLGPA_SURROGATE_ID,
        trunc(SHRTGPA.SHRTGPA_GPA,3) as SHRTGPA_SEMESTER_GPA,
        trunc(SHRLGPA.SHRLGPA_GPA,3) as SHRLGPA_CUMULATIVE_GPA

    from
        SHRTGPA SHRTGPA

        left outer join SHRLGPA SHRLGPA on SHRLGPA.SHRLGPA_PIDM = SHRTGPA.SHRTGPA_PIDM
            and SHRLGPA.SHRLGPA_GPA_TYPE_IND = 'I'
            and SHRLGPA.SHRLGPA_LEVL_CODE = SHRTGPA.SHRTGPA_LEVL_CODE
        left outer join SFRTHST SFRTHST on SFRTHST.SFRTHST_PIDM = SHRTGPA.SHRTGPA_PIDM
            and SFRTHST.SFRTHST_TERM_CODE = SHRTGPA.SHRTGPA_TERM_CODE
            and SFRTHST.SFRTHST_SURROGATE_ID = (select max(SFRTHST_SURROGATE_ID)
                                               from SFRTHST SFRTHSTX
                                               where SFRTHSTX.SFRTHST_PIDM = SFRTHST.SFRTHST_PIDM
                                               and SFRTHSTX.SFRTHST_TERM_CODE = SFRTHST.SFRTHST_TERM_CODE)

    where
        SHRTGPA.SHRTGPA_GPA_TYPE_IND = 'I'
        AND SHRTGPA.SHRTGPA_TERM_CODE = (SELECT MAX(SHRTGPA_TERM_CODE)
                                        FROM SHRTGPA S
                                        WHERE S.SHRTGPA_PIDM = SHRTGPA.SHRTGPA_PIDM)/*
                                        AND S.SHRTGPA_GPA_TYPE_IND = 'I'
                                        AND S.SHRTGPA_LEVL_CODE = SGBSTDN.SGBSTDN_LEVL_CODE)        */
    ),

SIRASGQ as
(
    select
        SIRASGN.SIRASGN_PIDM,
        SIRDPCL.SIRDPCL_PIDM,
        f_format_name(SIRDPCL_PIDM, 'LF30') as SIRDPCL_NAME,
        case
          when SIRDPCL_DEPT_CODE is null then f_get_desc_fnc('STVDEPT', SCBCRSE_DEPT_CODE, 30)
            else f_get_desc_fnc('STVDEPT', SIRDPCL_DEPT_CODE, 30)
              end as SIRDPCL_DEPT_DESC,
        SIRASGN_PRIMARY_IND as Primary_Instr,
        SSBSECT_TERM_CODE as Term_Code,
        SSBSECT_SICAS_CAMP_COURSE_ID as COURSE_ID,
        SSBSECT_CRN,
        SSBSECT_PTRM_CODE,
        SSBSECT_SUBJ_CODE,
        SSBSECT_CRSE_NUMB,
        SSBSECT_SEQ_NUMB,
        SSBSECT_ENRL,
        SSBSECT_SEATS_AVAIL,
        SSBSECT_TOT_CREDIT_HRS,
        GOREMAL_EMAIL_ADDRESS

    FROM
        SSBSECT SSBSECT
        LEFT OUTER JOIN SIRASGN SIRASGN ON SIRASGN_TERM_CODE = SSBSECT_TERM_CODE
             AND SIRASGN.SIRASGN_CRN = SSBSECT.SSBSECT_CRN
             AND SIRASGN_PRIMARY_IND = 'Y'
        LEFT OUTER JOIN SIRDPCL SIRDPCL ON SIRDPCL_PIDM = SIRASGN_PIDM
             AND SIRDPCL_SURROGATE_ID = (SELECT MAX(SIRDPCL_SURROGATE_ID)
                                        FROM SIRDPCL X
                                        WHERE X.SIRDPCL_PIDM = SIRDPCL.SIRDPCL_PIDM)
        LEFT OUTER JOIN GOREMAL GOREMAL ON GOREMAL.GOREMAL_PIDM = SIRDPCL_PIDM
             AND GOREMAL.GOREMAL_EMAL_CODE = 'ESF'
             AND GOREMAL.GOREMAL_STATUS_IND = 'A'
             AND GOREMAL.GOREMAL_PREFERRED_IND = 'Y'
        LEFT OUTER JOIN SCBCRSE SCBCRSE ON SSBSECT_SUBJ_CODE = SCBCRSE.SCBCRSE_SUBJ_CODE
            and SCBCRSE.SCBCRSE_CRSE_NUMB = SSBSECT_CRSE_NUMB

    WHERE
        SSBSECT_TERM_CODE = :select_term_code.STVTERM_CODE
        AND SIRDPCL_DEPT_CODE <> 'SU'

    ),

SFAREGS AS
(
    select
        SFRSTCR_PIDM,
        SFRSTCR_CRN,
        SFRSTCR_TERM_CODE,
        SSBSECT_TERM_CODE,
        SSBSECT_SICAS_CAMP_COURSE_ID,
        SSBSECT_CRN,
        SSBSECT_PTRM_CODE,
        SSBSECT_SUBJ_CODE,
        SSBSECT_CRSE_NUMB,
        SSBSECT_SEQ_NUMB,
        SSBSECT_ENRL,
        SSBSECT_SEATS_AVAIL,
        SSBSECT_TOT_CREDIT_HRS

    FROM
        SFRSTCR SFRSTCR
        LEFT OUTER JOIN SSBSECT SSBSECT ON SSBSECT.SSBSECT_TERM_CODE = SFRSTCR.SFRSTCR_TERM_CODE
             AND SSBSECT.SSBSECT_CRN = SFRSTCR.SFRSTCR_CRN

        LEFT OUTER JOIN SCBCRSE SCBCRSE ON SSBSECT_SUBJ_CODE = SCBCRSE.SCBCRSE_SUBJ_CODE
             AND SCBCRSE.SCBCRSE_CRSE_NUMB = SSBSECT_CRSE_NUMB

    WHERE
        SFRSTCR.SFRSTCR_RSTS_CODE IN ('RE', 'RW')
    ),

VIEW_1 AS(
    SELECT
        STVTERM_CODE as Term,
        STVTERM_DESC as Semester,
        STVTERM_ACYR_CODE as Year,
        SGBSTDN_TERM_CODE_EFF as SUSF,
        SPRIDEN_ID as BANNER_ID,
        SPRIDEN_LEGAL_NAME as Student,
        SPRIDEN_LAST_NAME as LNAME,
        SPRIDEN_FIRST_NAME as FNAME,
        SPRIDEN_MI as MI,
        SPBPERS_PREF_FIRST_NAME as PREF_NAME,
        SPBPERS_AGE as AGE,
        SPBPERS_SEX as SEX,
        SPBPERS.SPBPERS_ETHN_CDE as Ethn_Code,
        f_get_desc_fnc('STVETHN', SPBPERS_ETHN_CDE, 30) as Ethnicity,
        case
          when SPBPERS_ETHN_CDE in (2,3,4,5,6,7,9,10) then 'Y'
            else 'N'
              end as SPBPERS_SICAS_HISP_ORIGIN,
        SPBPERS.SPBPERS_CITZ_CODE as CITZ_CODE,
        SPBPERS_CITZ_COUNTRY as CITZ_COUNTRY,
        GOBINTL_NATN_CODE_BIRTH as BIRTH_NATN_CODE,
        GOBINTL_BIRTH_NATN as BIRTH_NATN,
        GORADID_ADDITIONAL_ID as SUID,
        GOREMAL_EMAIL_ADDRESS as Email,
        SGBSTDN_STYP_CODE as STYP_Code,
        SGBSTDN_LEVL_CODE as Student_Level,
        SGBSTDN_CLAS_CODE as Class_Code,
        SGBSTDN_MAJR_CODE_1 as Major_Code,
        SGBSTDN_MAJR_CODE_MINR_1 as Minor_Code,
        SGBSTDN_MAJR_CODE_MINR_1_2 as Minor_Code_2,
        SGBSTDN_MAJR_CODE_CONC_1 as Conc_Code,
        SGBSTDN_DEGC_CODE_1 as Degree_Code,

        SGBSTDN_STYP_DESC as STYP_Desc,
        SGBSTDN_LEVL_DESC as Class_Level,
        SGBSTDN_CLAS_DESC as Class_Desc,
        SGBSTDN_MAJR_DESC as Program_of_Study,
        SGBSTDN_MINR_1_DESC as Minor_Desc,
        SGBSTDN_MINR_1_2_DESC as Minor_Desc_2,
        SGBSTDN_CONC_DESC as Conc_Desc,
        SGBSTDN_DEGC_DESC as Degree_Program,

        SGBSTDN_MINR_1_DESC as Minor_Program,
        SGBSTDN_MINR_1_2_DESC as Minor_Program_2,
        SGBSTDN_CONC_DESC as Conc_Program,
        SGBSTDN_EXP_GRAD_DATE as ExpGradDate,

        SHRLGPA_HOURS_ATTEMPTED as Enrolled_Hours,
        SHRLGPA_HOURS_EARNED as Earned_Hours,
        SHRLGPA_GPA as GPA,
        SHRTGPA_HOURS_ATTEMPTED as Term_Enrolled_Hours,
        SHRTGPA_HOURS_EARNED as Term_Earned_Hours,
        SHRTGPA_GPA as Term_GPA,
        SHRTGPA_TERM_CODE as GPA_Term,
        f_get_desc_fnc('STVTERM', SHRTGPA_TERM_CODE, 30) as GPA_Term_Desc,
        SPRIDEN.SPRIDEN_SEARCH_LAST_NAME as LNAME_SORT,
        SPRIDEN.SPRIDEN_SEARCH_FIRST_NAME as FNAME_SORT,
        STVCLAS_SURROGATE_ID,
        case
            when SPBPERS_SEX is null then 0
            else 1
              end as SEX_Measure,
        case
            when SGBSTDN_MAJR_CODE_1 is null then 0
            else 1
              end as POS_Measure,
        SGBSTDN_DEPT_DESC as DEPT_Measure,
        GORRACE_DESC as IPED_Measure

    FROM
        STVTERM STVTERM
        LEFT OUTER JOIN SPAIDEN SPRIDEN ON SPRIDEN.SPRIDEN_PIDM IS NOT NULL
        LEFT OUTER JOIN SPAPERS SPBPERS ON SPBPERS.SPBPERS_PIDM = SPRIDEN.SPRIDEN_PIDM
        --LEFT OUTER JOIN STVETHN STVETHN on STVETHN.STVETHN_CODE = SPBPERS.SPBPERS_ETHN_CDE
        LEFT OUTER JOIN GOARACE GORPRAC ON GORPRAC.GORPRAC_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN SOREMAL GOREMAL ON GOREMAL.GOREMAL_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN SGASTDN SGBSTDN ON SGBSTDN.SGBSTDN_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN STVCLAS STVCLAS ON STVCLAS.STVCLAS_CODE = SGBSTDN.SGBSTDN_CLAS_CODE
        LEFT OUTER JOIN SHAGPAR SHAGPAR ON SHAGPAR.SHRTGPA_PIDM = SPRIDEN_PIDM
            --AND SHAGPAR.SHRTGPA_TERM_CODE = STVTERM_CODE
            AND SHAGPAR.SHRTGPA_LEVL_CODE = SGBSTDN_LEVL_CODE
            AND SHAGPAR.SHRLGPA_LEVL_CODE = SGBSTDN_LEVL_CODE


    WHERE
--        STVTERM_CODE = '&T'
        STVTERM_CODE = :select_term_code.STVTERM_CODE
--        STVTERM_ACYR_CODE = '&T'
--        STVTERM_ACYR_CODE = :select_acyr_code.STVTERM_ACYR_CODE
        AND SGBSTDN_TERM_CODE_EFF = FY_SGBSTDN_EFF_TERM(SGBSTDN_PIDM, stvterm_code)
        AND SGBSTDN_STST_CODE = 'AS'
        AND SGBSTDN_STYP_CODE <> 'X'
        AND SGBSTDN_LEVL_CODE <> 'ND'
        AND stvterm_acyr_code > 2019
        AND STVTERM_SURROGATE_ID = (SELECT min(STVTERM_SURROGATE_ID)
                                   FROM STVTERM S
                                   WHERE S.STVTERM_ACYR_CODE = STVTERM.STVTERM_ACYR_CODE)
    ORDER BY
        SPRIDEN.SPRIDEN_SEARCH_LAST_NAME,
        SPRIDEN.SPRIDEN_SEARCH_FIRST_NAME,
        STVTERM_CODE
    ),

VIEW_2 AS
(
    select
        STVTERM_CODE as Term,
        STVTERM_DESC as Semester,
        STVTERM_ACYR_CODE as Year,
        SGBSTDN_TERM_CODE_EFF as EFF_TERM,
        SPRIDEN_ID as BANNER_ID,
        SPRIDEN_LEGAL_NAME as Student,
        SPRIDEN_LAST_NAME as LNAME,
        SPRIDEN_FIRST_NAME as FNAME,
        SPRIDEN_MI as MI,
        SPBPERS_PREF_FIRST_NAME as PREF_NAME,
        SPBPERS_AGE as AGE,
        SPBPERS_SEX as SEX,
        SPBPERS.SPBPERS_ETHN_CDE as Ethn_Code,
        f_get_desc_fnc('STVETHN', SPBPERS_ETHN_CDE, 30) as Ethnicity,
        case
          when SPBPERS_ETHN_CDE in (2,3,4,5,6,7,9,10) then 'Y'
            else 'N'
              end as SPBPERS_SICAS_HISP_ORIGIN,
        GORADID_ADDITIONAL_ID as SUID,
        GOREMAL_EMAIL_ADDRESS as Email,
        SFRSTCR_CRN,

        SSBSECT_SICAS_CAMP_COURSE_ID as COURSE_ID,
        SSBSECT_TERM_CODE as Term_Code,
        f_get_desc_fnc('STVTERM', SSBSECT_TERM_CODE, 30) as Term_Desc,
        SSBSECT_CRN as CRN,
        SSBSECT_PTRM_CODE as PTRM,
        SSBSECT_SUBJ_CODE as SUBJ,
        SSBSECT_CRSE_NUMB as CRSE,
        SSBSECT_SEQ_NUMB as SEQ,
        SSBSECT_ENRL as ENRL_COUNT,
        SSBSECT_SEATS_AVAIL as Avail_Seats,
        SSBSECT_TOT_CREDIT_HRS as TOT_CR_HR

    from
        STVTERM STVTERM
        LEFT OUTER JOIN SPAIDEN SPRIDEN ON SPRIDEN.SPRIDEN_PIDM IS NOT NULL
        LEFT OUTER JOIN SPAPERS SPBPERS ON SPBPERS.SPBPERS_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN GOARACE GORPRAC ON GORPRAC.GORPRAC_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN SOREMAL GOREMAL ON GOREMAL.GOREMAL_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN SGASTDN SGBSTDN ON SGBSTDN.SGBSTDN_PIDM = SPRIDEN.SPRIDEN_PIDM

        LEFT OUTER JOIN SFAREGS S1 ON S1.SFRSTCR_PIDM = SPRIDEN.SPRIDEN_PIDM--S.SFRSTCR_PIDM
             AND SFRSTCR_TERM_CODE IN (STVTERM_CODE)

     where
--        STVTERM_CODE = '&T'
        STVTERM_CODE = :select_term_code.STVTERM_CODE
--        STVTERM_ACYR_CODE = '&T'
--        STVTERM_ACYR_CODE = :select_acyr_code.STVTERM_ACYR_CODE
        AND SGBSTDN_TERM_CODE_EFF = FY_SGBSTDN_EFF_TERM(SGBSTDN_PIDM, stvterm_code)
        AND SGBSTDN_STST_CODE = 'AS'
        AND SGBSTDN_STYP_CODE <> 'X'
        AND SGBSTDN_LEVL_CODE <> 'ND'
        AND STVTERM_ACYR_CODE > 2019
        AND SFRSTCR_CRN IS NOT NULL

     --$beginorder

     order by
        SPRIDEN.SPRIDEN_SEARCH_LAST_NAME,
        SPRIDEN.SPRIDEN_SEARCH_FIRST_NAME,
        STVTERM_CODE,
        COURSE_ID,
        SSBSECT_CRN

     --$endorder
    ),

VIEW_3 AS
(
    select
/*
        SIRASGN.SIRASGN_PIDM,
        SIRDPCL.SIRDPCL_PIDM,
        f_format_name(SIRDPCL_PIDM, 'LF30') as SIRDPCL_NAME,
        case
          when SIRDPCL_DEPT_CODE is null then f_get_desc_fnc('STVDEPT', SCBCRSE_DEPT_CODE, 30)
            else f_get_desc_fnc('STVDEPT', SIRDPCL_DEPT_CODE, 30)
              end as SIRDPCL_DEPT_DESC,
        SIRASGN_PRIMARY_IND as Primary_Instr,
        GOREMAL_EMAIL_ADDRESS as Instr_Email,
        */
        SSBSECT.SSBSECT_TERM_CODE as Term_Code,
        SSBSECT.SSBSECT_SICAS_CAMP_COURSE_ID as COURSE_ID,
        SSBSECT.SSBSECT_CRN,
        SSBSECT.SSBSECT_PTRM_CODE,
        SSBSECT.SSBSECT_SUBJ_CODE,
        SSBSECT.SSBSECT_CRSE_NUMB,
        SSBSECT.SSBSECT_SEQ_NUMB,
        SSBSECT.SSBSECT_ENRL,
        SSBSECT.SSBSECT_SEATS_AVAIL,
        SSBSECT.SSBSECT_TOT_CREDIT_HRS,
        SSRMEET_TERM_CODE,
        SSRMEET_CRN,
        SSRMEET_BEGIN_TIME,
        SSRMEET_END_TIME,
        SSRMEET_BLDG_CODE,
        SSRMEET_ROOM_CODE,
        SSRMEET_START_DATE,
        SSRMEET_END_DATE,
        SSRMEET_MON_DAY,
        SSRMEET_TUE_DAY,
        SSRMEET_WED_DAY,
        SSRMEET_THU_DAY,
        SSRMEET_FRI_DAY,
        SSRMEET_SAT_DAY,
        SSRMEET_CREDIT_HR_SESS,
        SSRMEET_MEET_NO,
        SSRMEET_HRS_WEEK

    FROM
        STVTERM STVTERM
        LEFT OUTER JOIN SSBSECT SSBSECT ON SSBSECT_TERM_CODE = STVTERM.STVTERM_CODE
        LEFT OUTER JOIN SIRASGN SIRASGN ON SIRASGN_TERM_CODE = SSBSECT_TERM_CODE
             AND SIRASGN.SIRASGN_CRN = SSBSECT.SSBSECT_CRN
             AND SIRASGN_PRIMARY_IND = 'Y'
        LEFT OUTER JOIN SIRDPCL SIRDPCL ON SIRDPCL_PIDM = SIRASGN_PIDM
             AND SIRDPCL_SURROGATE_ID = (SELECT MAX(SIRDPCL_SURROGATE_ID)
                                        FROM SIRDPCL X
                                        WHERE X.SIRDPCL_PIDM = SIRDPCL.SIRDPCL_PIDM)
        LEFT OUTER JOIN GOREMAL GOREMAL ON GOREMAL.GOREMAL_PIDM = SIRDPCL_PIDM
             AND GOREMAL.GOREMAL_EMAL_CODE = 'ESF'
             AND GOREMAL.GOREMAL_STATUS_IND = 'A'
             AND GOREMAL.GOREMAL_PREFERRED_IND = 'Y'
        LEFT OUTER JOIN SCBCRSE SCBCRSE ON SSBSECT_SUBJ_CODE = SCBCRSE.SCBCRSE_SUBJ_CODE
            and SCBCRSE.SCBCRSE_CRSE_NUMB = SSBSECT_CRSE_NUMB
        LEFT OUTER JOIN SSRMEET SSRMEET ON SSRMEET.SSRMEET_TERM_CODE = SSBSECT.SSBSECT_TERM_CODE
             AND SSRMEET.SSRMEET_CRN = SSBSECT.SSBSECT_CRN

    WHERE
        --STVTERM.STVTERM_ACYR_CODE = :select_acyr_code.STVTERM_ACYR_CODE
        STVTERM_CODE = :select_term_code.STVTERM_CODE
        AND SIRDPCL_DEPT_CODE <> 'SU'
        AND SSBSECT_TERM_CODE IN (STVTERM_CODE)
        --$addfilter
        --$beginorder
    ORDER BY
        --SIRDPCL_NAME,
        COURSE_ID,
        SSBSECT_CRN
        --$endorder
    )

select
        V3.*

from
        VIEW_3 V3

        /*
        AND STVTERM_SURROGATE_ID = (SELECT min(STVTERM_SURROGATE_ID)
                                   FROM STVTERM S
                                   WHERE S.STVTERM_ACYR_CODE = STVTERM.STVTERM_ACYR_CODE)
        */

--$addfilter