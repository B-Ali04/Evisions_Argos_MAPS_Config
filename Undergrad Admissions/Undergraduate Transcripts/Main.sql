--Admissions Datablock
with SGAIDEN as (

    select
        SPRIDEN.SPRIDEN_ID as SPRIDEN_ID,
        SPRIDEN.SPRIDEN_PIDM as SPRIDEN_PIDM,
        SPRIDEN.SPRIDEN_LAST_NAME as SPRIDEN_LAST_NAME,
        SPRIDEN.SPRIDEN_FIRST_NAME as SPRIDEN_FIRST_NAME,
        SPRIDEN.SPRIDEN_MI as MI,
        f_format_name(SPRIDEN.SPRIDEN_PIDM, 'LFMI') as SPRIDEN_LEGAL_NAME,
        SPRIDEN.SPRIDEN_SEARCH_LAST_NAME as SPRIDEN_SEARCH_LAST_NAME,
        SPRIDEN.SPRIDEN_SEARCH_FIRST_NAME as SPRIDEN_SEARCH_FIRST_NAME,
        SPRIDEN.SPRIDEN_SEARCH_MI as SPRIDEN_SEARCH_MI,
        GORADID.GORADID_PIDM as GORADID_PIDM,
        GORADID.GORADID_ADDITIONAL_ID as GORADID_ADDITIONAL_ID,
        GORADID.GORADID_ADID_CODE as GORADID_ADID_CODE

    from
        SPRIDEN SPRIDEN

        left outer join GORADID GORADID on GORADID.GORADID_PIDM = SPRIDEN.SPRIDEN_PIDM

    where
        SPRIDEN.SPRIDEN_NTYP_CODE is null
        and SPRIDEN.SPRIDEN_CHANGE_IND is null
   ),

SOREMAL as (

    select
        GOREMAL.GOREMAL_PIDM as GOREMAL_PIDM,
        GOREMAL.GOREMAL_EMAL_CODE as GOREMAL_EMAL_CODE,
        GOREMAL.GOREMAL_EMAIL_ADDRESS as GOREMAL_EMAIL_ADDRESS,
        GOREMAL.GOREMAL_STATUS_IND as GOREMAL_STATUS_IND,
        GOREMAL.GOREMAL_PREFERRED_IND as GOREMAL_PREFFERED_IND

    from
        GOREMAL GOREMAL

        left outer join GOREMAL GOREMAL1 on GOREMAL1.GOREMAL_PIDM = GOREMAL.GOREMAL_PIDM
             and GOREMAL1.GOREMAL_EMAL_CODE = 'PERS'
             and GOREMAL1.GOREMAL_STATUS_IND = 'A'
             and GOREMAL1.GOREMAL_SURROGATE_ID = (select max(GOREMAL_SURROGATE_ID)
                                            from GOREMAL GOREMALX
                                            where GOREMALX.GOREMAL_PIDM = GOREMAL1.GOREMAL_PIDM)

    where
        GOREMAL.GOREMAL_EMAL_CODE = 'SU'
        and GOREMAL.GOREMAL_STATUS_IND = 'A'
   ),

SPAPERS as (

    select
        SPBPERS.SPBPERS_PIDM as SPBPERS_PIDM,
        SPBPERS.SPBPERS_SSN as SPBPERS_SSN,
        SPBPERS.SPBPERS_BIRTH_DATE as BIRTH_DATE,
        SPBPERS.SPBPERS_SEX as SPBPERS_SEX,
        SPBPERS.SPBPERS_PREF_FIRST_NAME as SPBPERS_PREF_FIRST_NAME,
        SPBPERS.SPBPERS_GNDR_CODE as SPBPERS_GNDR_CODE,
        SPBPERS.SPBPERS_PPRN_CODE as SPBPERS_PPRN_CODE,
        SPBPERS.SPBPERS_BIRTH_DATE as SPBPERS_BIRTH_DATE,
        SPBPERS.SPBPERS_ETHN_CDE as SPBPERS_ETHN_CDE,
        SUBSTR(TO_CHAR(SPBPERS.SPBPERS_BIRTH_DATE,'MM/DD/YYYY'),7,4) as SPBPERS_BIRTH_YEAR,
        case
            when SPBPERS.SPBPERS_CITZ_CODE = 'Y' then 'United States'
            else (select STVNATN_NATION
                 from STVNATN
                 where STVNATN_CODE = nvl(GOBINTL.GOBINTL_NATN_CODE_LEGAL, GOBINTL.GOBINTL_NATN_CODE_BIRTH))
            end as SPBPERS_CITZ_COUNTRY,
        SPBPERS.SPBPERS_CITZ_CODE as SPBPERS_CITZ_CODE,
        SPBPERS.SPBPERS_ETHN_CODE as SPBPERS_ETHN_CODE,
        SPBPERS.SPBPERS_ARMED_SERV_MED_VET_IND as SPBPERS_ARMED_SERV_MED_VET_IND,
        SPBPERS.SPBPERS_VERA_IND as SPBPERS_VERA_IND

   from
        SPBPERS SPBPERS

        left outer join GOBINTL GOBINTL on GOBINTL.GOBINTL_PIDM = SPBPERS.SPBPERS_PIDM
   ),

SGASTDN as (

    select
        SGBSTDN.SGBSTDN_PIDM as SGBSTDN_PIDM,
        SGBSTDN.SGBSTDN_TERM_CODE_EFF as SGBSTDN_TERM_CODE_EFF,
        SGBSTDN.SGBSTDN_STST_CODE as SGBSTDN_STST_CODE,
        SGBSTDN.SGBSTDN_LEVL_CODE as SGBSTDN_LEVL_CODE,
        SGBSTDN.SGBSTDN_STYP_CODE as SGBSTDN_STYP_CODE,
        SGBSTDN.SGBSTDN_TERM_CODE_MATRIC as SGBSTDN_TERM_CODE_MATRIC,
        SGBSTDN.SGBSTDN_EXP_GRAD_DATE as SGBSTDN_EXP_GRAD_DATE,
        SGBSTDN.SGBSTDN_DEGC_CODE_1 as SGBSTDN_DEGC_CODE_1,
        SGBSTDN.SGBSTDN_MAJR_CODE_1 as SGBSTDN_MAJR_CODE_1,
        SGBSTDN.SGBSTDN_MAJR_CODE_MINR_1 as SGBSTDN_MAJR_CODE_MINR_1,
        SGBSTDN.SGBSTDN_MAJR_CODE_MINR_1_2 as SGBSTDN_MAJR_CODE_MINR_1_2,
        SGBSTDN.SGBSTDN_MAJR_CODE_CONC_1 as SGBSTDN_MAJR_CODE_CONC_1,
        SGBSTDN.SGBSTDN_RESD_CODE as SGBSTDN_RESD_CODE,
        SGBSTDN.SGBSTDN_ADMT_CODE as SGBSTDN_ADMT_CODE,
        SGBSTDN.SGBSTDN_DEPT_CODE as SGBSTDN_DEPT_CODE,
        SGBSTDN.SGBSTDN_PROGRAM_1 as SGBSTDN_PROGRAM_1,
        f_Get_desc_fnc('STVSTST',SGBSTDN.SGBSTDN_STST_CODE, 30) as SGBSTDN_STST_DESC,
        f_Get_desc_fnc('STVLEVL', SGBSTDN.SGBSTDN_LEVL_CODE, 30) as SGBSTDN_LEVL_DESC,
        f_Get_desc_fnc('STVSTYP', SGBSTDN.SGBSTDN_STYP_CODE, 30) as SGBSTDN_STYP_DESC,
        f_Get_desc_fnc('STVDEGC', SGBSTDN.SGBSTDN_DEGC_CODE_1, 30) as SGBSTDN_DEGC_DESC,
        f_Get_desc_fnc('STVMAJR', SGBSTDN.SGBSTDN_MAJR_CODE_1, 30) as SGBSTDN_MAJR_DESC,
        f_Get_desc_fnc('STVMAJR', SGBSTDN.SGBSTDN_MAJR_CODE_MINR_1, 30) as SGBSTDN_MINR_1_DESC,
        f_Get_desc_fnc('STVMAJR', SGBSTDN.SGBSTDN_MAJR_CODE_MINR_1_2, 30) as SGBSTDN_MINR_1_2_DESC,
        f_Get_desc_fnc('STVMAJR', SGBSTDN.SGBSTDN_MAJR_CODE_CONC_1, 30) as SGBSTDN_CONC_DESC,
        f_Get_desc_fnc('STVRESD', SGBSTDN.SGBSTDN_RESD_CODE, 30) as SGBSTDN_RESD_DESC,
        f_Get_desc_fnc('STVADMT', SGBSTDN.SGBSTDN_ADMT_CODE, 30) as SGBSTDN_ADMT_DESC,
        f_Get_desc_fnc('STVDEPT', SGBSTDN.SGBSTDN_DEPT_CODE, 30) as SGBSTDN_DEPT_DESC

   from
        SGBSTDN SGBSTDN
   ),

        -- Transfer Institutions

SOAPCOL as (

    select

        SORPCOL.SORPCOL_PIDM,
        SORPCOL.SORPCOL_SBGI_CODE,
        f_get_desc_fnc('STVSBGI', SORPCOL.SORPCOL_SBGI_CODE, 30) as SORPCOL_SGBI_DESC,
        SORPCOL.SORPCOL_TRANS_RECV_DATE,
        SORPCOL.SORPCOL_TRANS_REV_DATE,
        SORPCOL.SORPCOL_OFFICIAL_TRANS,
        SORPCOL.SORPCOL_ADMR_CODE,
        case
          when SORPCOL.SORPCOL_ADMR_CODE is null then ''
            else f_get_desc_fnc('STVADMR', SORPCOL.SORPCOL_ADMR_CODE, 30)
              end as SORPCOL_ADMR_DESC,
        SORPCOL.SORPCOL_ACTIVITY_DATE,
        SORPCOL.SORPCOL_DATA_ORIGIN,
        SORPCOL.SORPCOL_USER_ID,
        SORPCOL.SORPCOL_SURROGATE_ID,
        SORPCOL.SORPCOL_VERSION,
        SORPCOL.SORPCOL_VPDI_CODE,
        SORPCOL.SORPCOL_GUID,
        SORPCOL.SORPCOL_GPA,
        SORPCOL.SORPCOL_TOTAL_CREDITS,
        SORDEGR.SORDEGR_PIDM,
        SORDEGR.SORDEGR_SBGI_CODE,
        f_get_desc_fnc('STVSBGI', SORDEGR.SORDEGR_SBGI_CODE, 30) as SORDEGR_SGBI_DESC,
        SORDEGR.SORDEGR_DEGC_CODE,
        SORDEGR.SORDEGR_DEGR_SEQ_NO,
        SORDEGR.SORDEGR_ATTEND_FROM,
        SORDEGR.SORDEGR_ATTEND_TO,
        SORDEGR.SORDEGR_HOURS_TRANSFERRED,
        SORDEGR.SORDEGR_GPA_TRANSFERRED,
        SORDEGR.SORDEGR_DEGC_DATE,
        SORDEGR.SORDEGR_VERSION

    from
        SORPCOL SORPCOL
        left outer join SORDEGR SORDEGR on SORDEGR.SORDEGR_PIDM = SORPCOL.SORPCOL_PIDM
             and SORDEGR.SORDEGR_SBGI_CODE = SORPCOL.SORPCOL_SBGI_CODE

    where
        SORPCOL.SORPCOL_VERSION = (select max(SORPCOL_VERSION)
                                  from SORPCOL SORPCOLX
                                  where SORPCOLX.SORPCOL_PIDM = SORPCOL.SORPCOL_PIDM)
    ),
        -- Transfer Course Sections
SHATRNS as (

    select

        SHRTRCE.SHRTRCE_PIDM,
        SHRTRCE.SHRTRCE_TRIT_SEQ_NO,
        SHRTRCE.SHRTRCE_TRAM_SEQ_NO,
        SHRTRCE.SHRTRCE_SEQ_NO,
        SHRTRCE.SHRTRCE_TRCR_SEQ_NO,
        SHRTRCE.SHRTRCE_TERM_CODE_EFF,
        SHRTRCE.SHRTRCE_LEVL_CODE,
        SHRTRCE.SHRTRCE_SUBJ_CODE,
        SHRTRCE.SHRTRCE_CRSE_NUMB,
        SHRTRCE.SHRTRCE_CRSE_TITLE,
        SHRTRCE.SHRTRCE_CREDIT_HOURS,
        (SELECT to_char(SUM(SHRTRCE_CREDIT_HOURS), '000.00')
        from SHRTRCE SHRTRCEX
        where SHRTRCEX.SHRTRCE_PIDM = SHRTRCE.SHRTRCE_PIDM) as SHRTRCE_CREDIT_HR_SUM,
        SHRTRCE.SHRTRCE_GRDE_CODE,
        SHRTRCE.SHRTRCE_GMOD_CODE,
        SHRTRCE.SHRTRCE_COUNT_IN_GPA_IND,
        SHRTRCE.SHRTRCE_ACTIVITY_DATE,
        SHRTRCE.SHRTRCE_SURROGATE_ID,
        SHRTRCE.SHRTRCE_VERSION,
        SHRTRCE.SHRTRCE_USER_ID,
        SHRTRCE.SHRTRCE_DATA_ORIGIN,
        SHRTRCE.SHRTRCE_GUID,
        SHRTRIT.*

    from
        SHRTRCE SHRTRCE

        left outer join SHRTRIT SHRTRIT on SHRTRIT.SHRTRIT_PIDM = SHRTRCE.SHRTRCE_PIDM
    )

select

        STVTERM.STVTERM_CODE,
        STVTERM.STVTERM_DESC,
        SPRIDEN.SPRIDEN_ID as Banner_ID,
        SPRIDEN.SPRIDEN_LEGAL_NAME as StudentName,
        SPBPERS.SPBPERS_PREF_FIRST_NAME Pref_Fname,
        SGBSTDN.SGBSTDN_MAJR_CODE_1 as ProgramOfStudy,
        SGBSTDN.SGBSTDN_MAJR_DESC as MajorProgDesc,
        SGBSTDN.SGBSTDN_LEVL_DESC as Class_Levl,
        SGBSTDN.SGBSTDN_STYP_DESC as Student_Type,
        GOREMAL.GOREMAL_EMAIL_ADDRESS as SU_Email,
        SPRIDEN.GORADID_ADDITIONAL_ID as SU_ID,
        SHRTRCE.SHRTRCE_GRDE_CODE as TRANSFER_GRADE_CODE,
        SORDEGR_GPA_TRANSFERRED as GPA_TRANSFERRED,
        SORPCOL.SORPCOL_TRANS_REV_DATE as TRANS_REV_DATE,
        SORPCOL.SORPCOL_ADMR_CODE as ADMR_CODE,
        SORPCOL.SORPCOL_SGBI_DESC as Institution,
        f_get_desc_fnc('STVDEGC', SORDEGR_DEGC_CODE, 30) as DEGC_DESC,
        SORPCOL.SORDEGR_DEGC_DATE as DEGC_DATE,
        SHRTRCE.SHRTRCE_SUBJ_CODE as TRANSFER_SUBJ,
        SHRTRCE.SHRTRCE_CRSE_NUMB as TRANSFER_CRSE,
        SHRTRCE.SHRTRCE_CRSE_TITLE as TRANSFER_TITLE,
        (SELECT 'EOF' FROM DUAL) as EOF,
        SPRIDEN.*,
        GOREMAL.*,
        SGBSTDN.*,
        SPBPERS.*,
        SORPCOL.*,
        SHRTRCE.*

from
        STVTERM STVTERM

        join SGAIDEN SPRIDEN on SPRIDEN.SPRIDEN_PIDM is not null--f_registered_this_term(SGAIDEN.SPRIDEN_PIDM, STVTERM.STVTERM_CODE) = 'Y'
        left outer join SPAPERS SPBPERS on SPBPERS.SPBPERS_PIDM = SPRIDEN.SPRIDEN_PIDM
        left outer join SGASTDN SGBSTDN on SGBSTDN.SGBSTDN_PIDM = SPRIDEN.SPRIDEN_PIDM
        left outer join SOREMAL GOREMAL on GOREMAL.GOREMAL_PIDM = SPRIDEN.SPRIDEN_PIDM
        -- request 3 : CREDITS TRASNFERRED
        left outer join SOAPCOL SORPCOL on SORPCOL.SORPCOL_PIDM = SPRIDEN.SPRIDEN_PIDM
        left outer join SHATRNS SHRTRCE on SHRTRCE.SHRTRCE_PIDM = SPRIDEN.SPRIDEN_PIDM

where
      STVTERM.STVTERM_CODE = :select_term_code.STVTERM_CODE
      and SGBSTDN_STYP_CODE = :select_styp_code.STVSTYP_CODE
      and SGBSTDN_TERM_CODE_EFF = fy_sgbstdn_eff_term(SGBSTDN.SGBSTDN_PIDM, STVTERM.STVTERM_CODE)
      and f_registered_this_term(SPRIDEN.SPRIDEN_PIDM, STVTERM.STVTERM_CODE) = 'Y'
      and SHRTRCE.SHRTRIT_SBGI_CODE = SORPCOL.SORPCOL_SBGI_CODE
      and SHRTRCE.SHRTRCE_PIDM is not null
      and GORADID_ADID_CODE = 'SUID'
      and SGBSTDN_LEVL_CODE = 'UG'
      and SGBSTDN_STST_CODE = 'AS'


--$addfilter

--$beginorder

order by
      SPRIDEN_SEARCH_LAST_NAME,
      SPRIDEN_SEARCH_FIRST_NAME,
      SHRTRCE.SHRTRCE_LEVL_CODE,
      SHRTRCE.SHRTRCE_SUBJ_CODE,
      SHRTRCE.SHRTRCE_CRSE_NUMB

--$endorder
