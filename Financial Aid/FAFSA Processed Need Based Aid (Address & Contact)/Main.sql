
--select * from incoming students

/*
STUDENT COURSE REGISTRATION
v.1 ENROLLED STUDENTS
v.2a MAIN CAMPUS STUDENTS
v.2a RANGER SCHOOL STUDENTS
V3.a GRADUATE SCHOOL STUDENTS
v.3 VISITING STUDENTS
v.4 SU STUDENTS
v.5 EHS STUDENTS
*/

-- i.
with SPAIDEN as
(
    SELECT
        SPRIDEN.SPRIDEN_ID,
        SPRIDEN.SPRIDEN_PIDM,
        SPRIDEN.SPRIDEN_LAST_NAME,
        SPRIDEN.SPRIDEN_FIRST_NAME,
        SPRIDEN.SPRIDEN_MI,
        f_format_name(SPRIDEN.SPRIDEN_PIDM, 'LFMI') as SPRIDEN_LEGAL_NAME,
        SPRIDEN.SPRIDEN_SEARCH_LAST_NAME,
        SPRIDEN.SPRIDEN_SEARCH_FIRST_NAME,
        SPRIDEN.SPRIDEN_SEARCH_MI

    FROM
        SPRIDEN SPRIDEN

    WHERE
        SPRIDEN.SPRIDEN_NTYP_CODE IS NULL
        AND SPRIDEN.SPRIDEN_CHANGE_IND IS NULL
    ),

-- ii.
TUIADDR as
(
    SELECT
        SPRADDR.SPRADDR_PIDM,
        SPRADDR.SPRADDR_ATYP_CODE,
        SPRADDR.SPRADDR_SEQNO,
        SPRADDR.SPRADDR_FROM_DATE,
        SPRADDR.SPRADDR_TO_DATE,
        SPRADDR.SPRADDR_STREET_LINE1,
        SPRADDR.SPRADDR_STREET_LINE2,
        SPRADDR.SPRADDR_STREET_LINE3,
        SPRADDR.SPRADDR_CITY,
        SPRADDR.SPRADDR_STAT_CODE,
        SPRADDR.SPRADDR_ZIP,
        SPRADDR.SPRADDR_CNTY_CODE,
        f_get_desc_fnc('STVCNTY', SPRADDR.SPRADDR_ATYP_CODE, 30) as SPRADDR_ATYP_DESC,
        f_get_desc_fnc('STVCNTY', SPRADDR.SPRADDR_CNTY_CODE, 30) as SPRADDR_CNTY_DESC

    FROM
        SPRADDR SPRADDR

    WHERE
        SPRADDR.SPRADDR_ATYP_CODE IN ('MA','PA','PR')
        AND SPRADDR.SPRADDR_STATUS_IND IS NULL
        AND SPRADDR.SPRADDR_ATYP_CODE = 'PR'
        AND SPRADDR.SPRADDR_VERSION = (SELECT MAX(SPRADDR_VERSION)
                                      FROM SPRADDR SPRADDRX
                                      WHERE SPRADDRX.SPRADDR_PIDM = SPRADDR.SPRADDR_PIDM
                                      AND SPRADDRX.SPRADDR_ATYP_CODE IN ('MA','PA','PR')
                                      AND SPRADDRX.SPRADDR_STATUS_IND IS NULL)
        AND SPRADDR.SPRADDR_SURROGATE_ID = (SELECT MAX(SPRADDR_SURROGATE_ID)
                                           FROM SPRADDR SPRADDRX
                                           WHERE SPRADDRX.SPRADDR_PIDM = SPRADDR.SPRADDR_PIDM
                                           AND SPRADDRX.SPRADDR_ATYP_CODE IN ('MA','PA','PR')
                                           AND SPRADDRX.SPRADDR_STATUS_IND IS NULL)
    ),
-- iii.
SPATELE as
(
    SELECT
        SPRTELE.SPRTELE_PIDM as SPRTELE_PIDM,
        SPRTELE.SPRTELE_TELE_CODE as SPRTELE_TELE_CODE,
        SPRTELE.SPRTELE_PHONE_AREA as SPRTELE_PHONE_AREA,
        SPRTELE.SPRTELE_PHONE_NUMBER as SPRTELE_PHONE_NUMBER,
        SPRTELE.SPRTELE_SURROGATE_ID as SPRTELE_SURROGATE_ID,
        SPRTELE.SPRTELE_VERSION as SPRTELE_VERSION,
        f_get_desc_fnc('STVTELE', SPRTELE.SPRTELE_TELE_CODE, 30) as SPRTELE_TELE_DESC

    FROM
        SPRTELE SPRTELE

    WHERE
         SPRTELE.SPRTELE_SURROGATE_ID = (SELECT MAX(SPRTELE_SURROGATE_ID)
                                        FROM SPRTELE SPRTELEX
                                        WHERE SPRTELEX.SPRTELE_PIDM = SPRTELE.SPRTELE_PIDM
                                        AND SPRTELEX.SPRTELE_STATUS_IND IS NULL)
    ),

SPAPERS as
(
    SELECT
        SPBPERS.SPBPERS_PIDM,
        SPBPERS.SPBPERS_SSN,
        SPBPERS.SPBPERS_BIRTH_DATE,
        ROUND(((SYSDATE - SPBPERS_BIRTH_DATE)/365), 0) as SPBPERS_AGE,
        SPBPERS.SPBPERS_SEX,
        SPBPERS.SPBPERS_PREF_FIRST_NAME,
        SPBPERS.SPBPERS_CITZ_CODE,
        SPBPERS.SPBPERS_ETHN_CDE,
        f_get_desc_fnc('STVETHN', SPBPERS_ETHN_CDE, 30) as SPBPERS_ETHN_DESC,
        case
          when SPBPERS_ETHN_CDE in (2,3,4,5,6,7,9,10) then 'Y'
            else 'N'
              end as SPBPERS_SICAS_HISP_ORIGIN,
        CASE
            WHEN SPBPERS.SPBPERS_CITZ_CODE = 'Y' THEN 'United States'
            ELSE (SELECT STVNATN_NATION
                 FROM STVNATN
                 WHERE STVNATN_CODE = NVL(GOBINTL.GOBINTL_NATN_CODE_LEGAL, GOBINTL.GOBINTL_NATN_CODE_BIRTH))
            END as SPBPERS_CITZ_COUNTRY,
        SPBPERS.SPBPERS_GNDR_CODE,
        GOBINTL_NATN_CODE_BIRTH,
        f_get_desc_fnc('STVNATN', GOBINTL_NATN_CODE_BIRTH, 30) as GOBINTL_BIRTH_NATN

   FROM
        SPBPERS SPBPERS
        LEFT OUTER JOIN GOBINTL GOBINTL ON GOBINTL.GOBINTL_PIDM = SPBPERS.SPBPERS_PIDM
   ),

GOARACE as
(
    SELECT
        GORPRAC.GORPRAC_PIDM as GORPRAC_PIDM,
        (listagg(GORPRAC.GORPRAC_RACE_CDE,', ') within group (order by GORPRAC.GORPRAC_RACE_CDE)) as GORRACE_RACE_CDE,
        (listagg(GORRACE.GORRACE_DESC,', ') within group (order by GORRACE.GORRACE_DESC)) as GORRACE_DESC

    FROM
        GORPRAC GORPRAC

    LEFT OUTER JOIN GORRACE GORRACE ON GORRACE.GORRACE_RACE_CDE = GORPRAC.GORPRAC_RACE_CDE

    GROUP BY
        GORPRAC.GORPRAC_PIDM
    ),

SOREMAL as
(
    SELECT
        GOREMAL.GOREMAL_PIDM,
        GOREMAL.GOREMAL_EMAL_CODE,
        GOREMAL.GOREMAL_EMAIL_ADDRESS,
        GOREMAL.GOREMAL_STATUS_IND,
        GOREMAL.GOREMAL_PREFERRED_IND,
        GORADID.GORADID_PIDM,
        GORADID.GORADID_ADDITIONAL_ID,
        GORADID.GORADID_ADID_CODE,
        GOBTPAC.GOBTPAC_EXTERNAL_USER --esfid

    FROM
        GOREMAL GOREMAL
        LEFT OUTER JOIN GORADID GORADID ON GORADID.GORADID_PIDM = GOREMAL.GOREMAL_PIDM
             AND GORADID.GORADID_ADID_CODE = 'SUID'
        LEFT OUTER JOIN GOBUMAP GOBUMAP ON GOBUMAP.GOBUMAP_PIDM = GOREMAL.GOREMAL_PIDM
        LEFT OUTER JOIN GOBTPAC GOBTPAC ON GOBTPAC.GOBTPAC_PIDM = GOREMAL.GOREMAL_PIDM

    WHERE
        GOREMAL.GOREMAL_EMAL_CODE = 'SU'
        AND GOREMAL.GOREMAL_STATUS_IND = 'A'
        AND GOREMAL.GOREMAL_PREFERRED_IND = 'Y'
        AND GORADID.GORADID_ADID_CODE = 'SUID'
    ),

ADRCONT as (
    SELECT
        SPRIDEN.SPRIDEN_PIDM,
        SPRADDR_ATYP_CODE as ADDRESS,
        SPRADDR_ATYP_DESC as ADDRESS_DESC,
        SPRADDR_STREET_LINE1 as STREET_LINE1,
        SPRADDR_STREET_LINE2 as STREET_LINE2,
        SPRADDR_STREET_LINE3 as STREET_LINE3,
        SPRADDR_CITY as CITY,
        SPRADDR_STAT_CODE as STAT_CODE,
        SPRADDR_ZIP as ZIP,

        SPRTELE_TELE_CODE as TELE_CODE,
        SPRTELE_PHONE_AREA as PHONE_AREA,
        SPRTELE_PHONE_NUMBER as PHONE_NUMBER,
        SPRTELE_TELE_DESC as TELE_DESC,
        SPRADDR.SPRADDR_PIDM,
        SPRADDR.SPRADDR_ATYP_CODE,
        SPRADDR.SPRADDR_STREET_LINE1,
        SPRADDR.SPRADDR_STREET_LINE2,
        SPRADDR.SPRADDR_STREET_LINE3,
        SPRADDR.SPRADDR_CITY,
        SPRADDR.SPRADDR_STAT_CODE,
        SPRADDR.SPRADDR_ZIP,
        SPRADDR.SPRADDR_CNTY_CODE,
        f_get_desc_fnc('STVCNTY', SPRADDR.SPRADDR_ATYP_CODE, 30) as SPRADDR_ATYP_DESC,
        SPRTELE.SPRTELE_PIDM as SPRTELE_PIDM,
        SPRTELE.SPRTELE_TELE_CODE as SPRTELE_TELE_CODE,
        SPRTELE.SPRTELE_PHONE_AREA as SPRTELE_PHONE_AREA,
        SPRTELE.SPRTELE_PHONE_NUMBER as SPRTELE_PHONE_NUMBER,

        f_get_desc_fnc('STVTELE', SPRTELE.SPRTELE_TELE_CODE, 30) as SPRTELE_TELE_DESC

    FROM
        SPRIDEN SPRIDEN
        LEFT OUTER JOIN SPATELE SPRTELE ON SPRTELE.SPRTELE_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN TUIADDR SPRADDR ON SPRADDR.SPRADDR_PIDM = SPRIDEN.SPRIDEN_PIDM
    ),

SAAADMS as
(
    select
        SARAPPD_PIDM,
        SARAPPD_TERM_CODE_ENTRY,
        SARAPPD_APPL_NO,
        SARAPPD_SEQ_NO,
        SARAPPD_APDC_DATE,
        SARAPPD_APDC_CODE,
        SARAPPD_MAINT_IND,
        SARAPPD_ACTIVITY_DATE,
        SARAPPD_USER,
        SARAPPD_DATA_ORIGIN,
        SARAPPD_SURROGATE_ID,
        SARAPPD_VERSION,
        SARAPPD_USER_ID,
        SARAPPD_VPDI_CODE,
        SARAPPD_GUID,
        SARAPPD_DFE_ADMN_DECN_GUID

    from
        SARAPPD SARAPPD

    where
        SARAPPD.SARAPPD_SEQ_NO = (select max(SARAPPD_SEQ_NO)
                                 from SARAPPD SARAPPDX
                                 where SARAPPDX.SARAPPD_PIDM = SARAPPD.SARAPPD_PIDM)
        and SARAPPD.SARAPPD_APPL_NO = (select max(SARAPPD_APPL_NO)
                                 from SARAPPD SARAPPDX
                                 where SARAPPDX.SARAPPD_PIDM = SARAPPD.SARAPPD_PIDM)
     ),

RCAAPPL  as
(
    select
        --*
         RCVAPPL_AIDY_CODE,
         RCVAPPL_PIDM,
         RCVAPPL_INFC_CODE,
         RCVAPPL_SEQ_NO,
         RCVAPPL_CURR_REC_IND,
         RCVAPPL_USED_TRANS_NO,
         RCVAPPL_PGI,
         RCVAPPL_TFC,
         SUM(RCVAPPL_PGI) as RCVAPPL_EFC_SUM

    from
         RCVAPPL RCVAPPL

    where
         --RCVAPPL_INFC_CODE = 'ISIR'
         RCVAPPL_AIDY_CODE = :select_term_code.STVTERM_FA_PROC_YR
         and RCVAPPL_SEQ_NO = (select max(RCVAPPL_SEQ_NO)
                             from RCVAPPL RCVAPPL1
                             where RCVAPPL1.RCVAPPL_PIDM = RCVAPPL.RCVAPPL_PIDM
                             and RCVAPPL1.RCVAPPL_INFC_CODE = RCVAPPL.RCVAPPL_INFC_CODE
                             and RCVAPPL1.RCVAPPL_AIDY_CODE = RCVAPPL.RCVAPPL_AIDY_CODE)

    group by
            RCVAPPL_AIDY_CODE,
            RCVAPPL_PIDM,
            RCVAPPL_INFC_CODE,
            RCVAPPL_SEQ_NO,
            RCVAPPL_CURR_REC_IND,
            RCVAPPL_USED_TRANS_NO,
            RCVAPPL_PGI,
            RCVAPPL_TFC
    ),
    -- you know how much you hate when things lose their integrity

RPAAWRD  as
(
    select
         SUM(RPRAWRD_ACCEPT_AMT) as RPRAWRD_OFFER_SUM ,
         RPRAWRD_pidm,
         RPRAWRD_AIDY_CODE

    from
         RPRAWRD RPRAWRD
    where
         --RCVAPPL_INFC_CODE = 'ISIR'
         RPRAWRD_AIDY_CODE = :select_term_code.STVTERM_FA_PROC_YR
    group by
         RPRAWRD_PIDM,
         RPRAWRD_AIDY_CODE
    ),

RPRACMP as
(
    select
         SUM(RBRACMP_AMT) as RBRACMP_SUM ,
         RBRACMP_AIDY_CODE,
         RBRACMP_PIDM

    from
         RBRACMP RBRACMP

    where
         RBRACMP_BTYP_CODE = 'PELL'
         AND RBRACMP_AIDY_CODE = :select_term_code.STVTERM_FA_PROC_YR
    group by
         RBRACMP_PIDM,
         RBRACMP_AIDY_CODE
    ),

FA_APPLIED_STUDENTS as(

    select
        SARAPPD_PIDM,
        SPRIDEN_ID as BANNER_ID,
        SPRIDEN_LEGAL_NAME as APPLICANT_NAME,
        SARAPPD_TERM_CODE_ENTRY as TERM_CODE_ENTRY,
        SARAPPD_APPL_NO as APPL_NO,
        SARAPPD_APDC_DATE as DECISION_DATE,
        SARAPPD_APDC_CODE as DECISION_CODE,
        SARAPPD_ACTIVITY_DATE as ACTIVITY_DATE,
        SARAPPD_SURROGATE_ID,
        SARAPPD_VERSION,
        SARAPPD_APDC_CODE,
        /*
        RCVAPPL.RCVAPPL_PIDM,
        RCVAPPL_AIDY_CODE,
        RPRAWRD_AIDY_CODE
        RCVAPPL_INFC_CODE,
        RCVAPPL_CURR_REC_IND,
        RCVAPPL_PGI,
        RCVAPPL_TFC,
        RCVAPPL_EFC_SUM,
        /*
        RPRAWRD.RPRAWRD_PIDM,
        RPRAWRD_AIDY_CODE,
        RPRAWRD_OFFER_SUM,
        */
        RBRACMP.RBRACMP_PIDM,
        RBRACMP_AIDY_CODE,
        RBRACMP_SUM
        --UCID BLACKBOARD - HOORAY

        SPRIDEN_SEARCH_LAST_NAME,
        SPRIDEN_SEARCH_FIRST_NAME

    from
        SARAPPD SARAPPD
        LEFT OUTER JOIN SPAIDEN SPRIDEN ON SPRIDEN.SPRIDEN_PIDM = SARAPPD.SARAPPD_PIDM
        --LEFT OUTER JOIN RCAAPPL RCVAPPL ON RCVAPPL.RCVAPPL_PIDM = SARAPPD.SARAPPD_PIDM
        --LEFT OUTER JOIN RPAAWRD RPRAWRD ON RPRAWRD.RPRAWRD_PIDM = SARAPPD.SARAPPD_PIDM
        LEFT OUTER JOIN RPRACMP RBRACMP ON RBRACMP.RBRACMP_PIDM = SARAPPD.SARAPPD_PIDM

    where
        SARAPPD_TERM_CODE_ENTRY >= 202020
        and SARAPPD.SARAPPD_SEQ_NO = (select max(SARAPPD_SEQ_NO)
                                 from SARAPPD SARAPPDX
                                 where SARAPPDX.SARAPPD_PIDM = SARAPPD.SARAPPD_PIDM)
        and SARAPPD.SARAPPD_APPL_NO = (select max(SARAPPD_APPL_NO)
                                 from SARAPPD SARAPPDX
                                 where SARAPPDX.SARAPPD_PIDM = SARAPPD.SARAPPD_PIDM)
     ),

FA_GROSS_NEED as(

    select
        SPRIDEN_PIDM,
        SPRIDEN_ID as BANNER_ID,
        SPRIDEN_LEGAL_NAME as APPLICANT_NAME,
        RCVAPPL_PIDM,
        RCVAPPL_AIDY_CODE as APPLIED_AIDY,
        RCVAPPL_INFC_CODE as INFC_CODE,
        RCVAPPL_CURR_REC_IND,
        RCVAPPL_USED_TRANS_NO INFC_TRANSACTOIN_NO,
        RCVAPPL_PGI as APPLIED_PGI,
        RCVAPPL_TFC,
        RCVAPPL_EFC_SUM as FM_EFC_VALUE,
        RPRAWRD_PIDM,
        RPRAWRD_AIDY_CODE as AWARDED_AIDY,
        RPRAWRD_OFFER_SUM as OFFER_AMT,

        RBRACMP_PIDM,
        RBRACMP_AIDY_CODE as BUDGET_AIDY,
        RBRACMP_SUM as FM_BUDGET_EST,
        --UCID BLACKBOARD - HOORAY
        SPRIDEN.SPRIDEN_SEARCH_LAST_NAME,
        SPRIDEN.SPRIDEN_SEARCH_FIRST_NAME,
        case
            when (RBRACMP_SUM-RCVAPPL_EFC_SUM) < 0 then 0
            else (RBRACMP_SUM-RCVAPPL_EFC_SUM)
            end as gross_need_test,
        case
            when (RBRACMP_SUM-RCVAPPL_EFC_SUM) < 0 then 0
            else (RBRACMP_SUM-RCVAPPL_EFC_SUM)
            end as FM_EST_GROSS_NEED,
        (-((RCVAPPL_EFC_SUM) - RBRACMP_SUM) - RPRAWRD_OFFER_SUM) as FM_EST_UNMET_NEED,
        SPRADDR.SPRADDR_PIDM,
        SPRADDR_ATYP_CODE as ADDRESS,
        SPRADDR_ATYP_DESC as ADDRESS_DESC,
        SPRADDR_STREET_LINE1 as STREET_LINE1,
        SPRADDR_STREET_LINE2 as STREET_LINE2,
        SPRADDR_STREET_LINE3 as STREET_LINE3,
        SPRADDR_CITY as CITY,
        SPRADDR_STAT_CODE as STAT_CODE,
        SPRADDR_ZIP as ZIP,
        SPRTELE.SPRTELE_PIDM,
        SPRTELE_TELE_CODE as TELE_CODE,
        SPRTELE_TELE_DESC as TELE_DESC,
        SPRTELE_PHONE_AREA as PHONE_AREA,
        SPRTELE_PHONE_NUMBER as PHONE_NUMBER

/*
        ADRCONT.SPRADDR_ATYP_CODE as ADDRESS
        ADRCONT.SPRADDR_ATYP_DESC as ADDRESS_DESC,
        ADRCONT.SPRADDR_STREET_LINE1 as STREET_LINE1,
        ADRCONT.SPRADDR_STREET_LINE2 as STREET_LINE2,
        ADRCONT.SPRADDR_STREET_LINE3 as STREET_LINE3,
        ADRCONT.SPRADDR_CITY as CITY,
        ADRCONT.SPRADDR_STAT_CODE as STAT_CODE,
        ADRCONT.SPRADDR_ZIP as ZIP

        ADRCONT.SPRTELE_TELE_CODE as TELE_CODE,
        ADRCONT.SPRTELE_PHONE_AREA as PHONE_AREA,
        ADRCONT.SPRTELE_PHONE_NUMBER as PHONE_NUMBER,
        ADRCONT.SPRTELE_TELE_DESC as TELE_DESC
*/
    from
        SPAIDEN SPRIDEN
        LEFT OUTER JOIN RCAAPPL RCVAPPL ON RCVAPPL.RCVAPPL_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN RPAAWRD RPRAWRD ON RPRAWRD.RPRAWRD_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN RPRACMP RBRACMP ON RBRACMP.RBRACMP_PIDM = SPRIDEN.SPRIDEN_PIDM
-- ADRESS AND CONTACT
/* RCRAPP - REPALCEMENT */
        LEFT OUTER JOIN TUIADDR SPRADDR ON SPRADDR.SPRADDR_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN SPATELE SPRTELE ON SPRTELE.SPRTELE_PIDM = SPRIDEN.SPRIDEN_PIDM

    where
        RCVAPPL_AIDY_CODE = :select_term_code.STVTERM_FA_PROC_YR
        --TEST
        --and RCVAPPL_INFC_CODE = ('&INFC')
     )
     /*
     ,

FA_GROSS_NEED_DISPLAY as(

    select
        SPRIDEN_ID as BANNER_ID,
        SPRIDEN_LEGAL_NAME as APPLICANT_NAME,
        RCVAPPL_AIDY_CODE as AIDY_CODE,
        RCVAPPL_INFC_CODE,
        SPRIDEN_SEARCH_LAST_NAME,
        SPRIDEN_SEARCH_FIRST_NAME

    from
        SPAIDEN SPRIDEN
        LEFT OUTER JOIN RCAAPPL RCVAPPL ON RCVAPPL.RCVAPPL_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN RPAAWRD RPRAWRD ON RPRAWRD.RPRAWRD_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN RPRACMP RBRACMP ON RBRACMP.RBRACMP_PIDM = SPRIDEN.SPRIDEN_PIDM

    where
        RCVAPPL_AIDY_CODE = :select_term_code.STVTERM_FA_PROC_YR--:select_term_code.STVTERM_FA_PROC_YR
     )
     */
SELECT *

FROM
      --FA_APPLIED_STUDENTS SAP
      --FA_GROSS_NEED_DISPLAY GN1_D
      FA_GROSS_NEED GN1
      --CLASS_LIST CL1
      --COURE_ENROLLED_1 CE1
      --SCHEDULE_VIEW_1 SV1
WHERE
SPRIDEN_PIDM IS NOT NULL
--and FM_GROSS_NEED > 0
--DECISIONED APPLICANTS
--      SARAPPD_APDC_CODE IN ('&APDC')
--      RCVAPPL_INFC_CODE = ('&INFC')
         --$addfilter

         --$beginorder

ORDER BY
        --ALL STUDENT-FACING QUERIES

        SPRIDEN_SEARCH_LAST_NAME,
        SPRIDEN_SEARCH_FIRST_NAME

        --SV1 ONLY
        --SSBSECT_SICAS_CAMP_SECTION_ID
         --$endorder