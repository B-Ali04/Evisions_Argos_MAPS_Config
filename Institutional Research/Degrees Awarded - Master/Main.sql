with SPAIDEN as
(
    select
        SPRIDEN.SPRIDEN_ID as SPRIDEN_ID,
        SPRIDEN.SPRIDEN_PIDM as SPRIDEN_PIDM,
        SPRIDEN.SPRIDEN_LAST_NAME as SPRIDEN_LAST_NAME,
        SPRIDEN.SPRIDEN_FIRST_NAME as SPRIDEN_FIRST_NAME,
        SPRIDEN.SPRIDEN_MI as SPRIDEN_MI,
        f_format_name(SPRIDEN.SPRIDEN_PIDM, 'LFMI') as SPRIDEN_LEGAL_NAME,
        SPRIDEN.SPRIDEN_SEARCH_LAST_NAME as SPRIDEN_SEARCH_LAST_NAME,
        SPRIDEN.SPRIDEN_SEARCH_FIRST_NAME as SPRIDEN_SEARCH_FIRST_NAME,
        SPRIDEN.SPRIDEN_SEARCH_MI as SPRIDEN_SEARCH_MI

    from
        SPRIDEN SPRIDEN

    where
        SPRIDEN.SPRIDEN_NTYP_CODE is null
        and SPRIDEN.SPRIDEN_CHANGE_IND is null
    ),

SPAPERS as
(
    select
        SPBPERS.SPBPERS_PIDM,
        SPBPERS.SPBPERS_SSN,
        SPBPERS.SPBPERS_BIRTH_DATE,
        ROUND(((SYSDATE - SPBPERS_BIRTH_DATE)/365), 0) as SPBPERS_AGE,
        SPBPERS.SPBPERS_SEX,
        SPBPERS.SPBPERS_PREF_FIRST_NAME,
        SPBPERS.SPBPERS_CITZ_CODE,
        SPBPERS_ETHN_CDE,
        case
            when SPBPERS.SPBPERS_CITZ_CODE = 'Y' then 'United States'
            else (select STVNATN_NATION
                 from STVNATN
                 where STVNATN_CODE = nvl(GOBINTL.GOBINTL_NATN_CODE_LEGAL, GOBINTL.GOBINTL_NATN_CODE_BIRTH))
            end as SPBPERS_CITZ_COUNTRY,
        SPBPERS.SPBPERS_GNDR_CODE,
        GOBINTL_NATN_CODE_BIRTH,
        f_get_desc_fnc('STVNATN', GOBINTL_NATN_CODE_BIRTH, 30) as GOBINTL_BIRTH_NATN

   from
        SPBPERS SPBPERS

        left outer join GOBINTL GOBINTL on GOBINTL.GOBINTL_PIDM = SPBPERS.SPBPERS_PIDM
   ),

GOARACE as
(
    select
        GORPRAC.GORPRAC_PIDM as GORPRAC_PIDM,
        (listagg(GORPRAC.GORPRAC_RACE_CDE,', ') within group (order by GORPRAC.GORPRAC_RACE_CDE)) as GORRACE_RACE_CDE,
        (listagg(GORRACE.GORRACE_DESC,', ') within group (order by GORRACE.GORRACE_DESC)) as GORRACE_DESC

    from
        GORPRAC GORPRAC

    left outer join GORRACE GORRACE ON GORRACE.GORRACE_RACE_CDE = GORPRAC.GORPRAC_RACE_CDE

    group by
        GORPRAC.GORPRAC_PIDM
    ),

SOREMAL as
(
    select
        GOREMAL.GOREMAL_PIDM as GOREMAL_PIDM,
        GOREMAL.GOREMAL_EMAL_CODE as GOREMAL_EMAL_CODE,
        GOREMAL.GOREMAL_EMAIL_ADDRESS as GOREMAL_EMAIL_ADDRESS,
        GOREMAL.GOREMAL_STATUS_IND as GOREMAL_STATUS_IND,
        GOREMAL.GOREMAL_PREFERRED_IND as GOREMAL_PREFFERED_IND,
        GORADID.GORADID_PIDM as GORADID_PIDM,
        GORADID.GORADID_ADDITIONAL_ID as GORADID_ADDITIONAL_ID,
        GORADID.GORADID_ADID_CODE as GORADID_ADID_CODE,
        GOBTPAC_EXTERNAL_USER as GOBTPAC_EXTERNAL_USER --esfid

    from
        GOREMAL GOREMAL

        left outer join GORADID GORADID on GORADID.GORADID_PIDM = GOREMAL.GOREMAL_PIDM
             and GORADID.GORADID_ADID_CODE = 'SUID'
        left outer join GOBUMAP GOBUMAP on GOBUMAP.GOBUMAP_PIDM = GOREMAL.GOREMAL_PIDM
        left outer join GOBTPAC GOBTPAC on GOBTPAC.GOBTPAC_PIDM = GOREMAL.GOREMAL_PIDM

    where
        GOREMAL.GOREMAL_EMAL_CODE = 'SU'
        and GOREMAL.GOREMAL_STATUS_IND = 'A'
        and GOREMAL.GOREMAL_PREFERRED_IND = 'Y'
        and GORADID.GORADID_ADID_CODE = 'SUID'
    ),

SHADEGR as
(
    select
        SHRDGMR_PIDM,
        SHRDGMR_SEQ_NO,
        SHRDGMR_DEGC_CODE,
        SHRDGMR_DEGS_CODE,
        SHRDGMR_LEVL_CODE,
        SHRDGMR_COLL_CODE_1,
        SHRDGMR_MAJR_CODE_1,
        SHRDGMR_APPL_DATE,
        SHRDGMR_GRAD_DATE,
        SHRDGMR_ACYR_CODE_BULLETIN,
        SHRDGMR_ACYR_CODE,
        SHRDGMR_TERM_CODE_GRAD,
        SHRDGMR_TERM_CODE_STUREC,
        f_get_desc_fnc('STVDEGS', SHRDGMR_DEGS_CODE, 30) as SHRDGMR_DEGS_DESC,
        f_get_desc_fnc('STVDEGC', SHRDGMR_DEGC_CODE, 30) as SHRDGMR_DEGC_DESC,
        f_get_desc_fnc('STVLEVL', SHRDGMR_LEVL_CODE, 30) as SHRDGMR_LEVL_DESC,
        f_get_desc_fnc('STVMAJR', SHRDGMR_MAJR_CODE_1, 30) as SHRDGMR_MAJR_DESC

   from
        SHRDGMR SHRDGMR
   ),

SHAGPAR as
(
    select
        case
            when SFRTHST.SFRTHST_TMST_CODE is not null then SFRTHST.SFRTHST_TMST_CODE
            when SHRTGPA.SHRTGPA_HOURS_ATTEMPTED >= 12 then 'FT'
              else 'PT'
                end as SFRTHST_ENROLLEMENT,
        SFRTHST.SFRTHST_TERM_CODE as SFRTHST_TERM_CODE,
        SHRTGPA.SHRTGPA_PIDM as SHRTGPA_PIDM,
        SHRTGPA.SHRTGPA_LEVL_CODE as SHRTGPA_LEVL_CODE,
        SHRTGPA.SHRTGPA_GPA_TYPE_IND as SHRTGPA_GPA_TYPE_IND,
        SHRTGPA.SHRTGPA_TERM_CODE as SHRTGPA_TERM_CODE,
        SHRTGPA.SHRTGPA_HOURS_ATTEMPTED as SHRTGPA_HOURS_ATTEMPTED,
        SHRTGPA.SHRTGPA_HOURS_EARNED as SHRTGPA_HOURS_EARNED,
        SHRTGPA.SHRTGPA_GPA_HOURS as SHRTGPA_GPA_HOURS,
        SHRTGPA.SHRTGPA_GPA as SHRTGPA_GPA,
        SHRTGPA.SHRTGPA_QUALITY_POINTS as SHRTGPA_QUALITY_POINTS,
        SHRTGPA.SHRTGPA_HOURS_PASSED as SHRTGPA_HOURS_PASSED,
        SHRLGPA.SHRLGPA_PIDM as SHRLGPA_PIDM,
        SHRLGPA.SHRLGPA_LEVL_CODE as SHRLGPA_LEVL_CODE,
        SHRLGPA.SHRLGPA_GPA_TYPE_IND as SHRLGPA_GPA_TYPE_IND,
        SHRLGPA.SHRLGPA_HOURS_ATTEMPTED as SHRLGPA_HOURS_ATTEMPTED,
        SHRLGPA.SHRLGPA_HOURS_EARNED as SHRLGPA_HOURS_EARNED,
        SHRLGPA.SHRLGPA_GPA_HOURS as SHRLGPA_GPA_HOURS,
        SHRLGPA.SHRLGPA_GPA as SHRLGPA_GPA,
        SHRLGPA.SHRLGPA_QUALITY_POINTS as SHRLGPA_QUALITY_POINTS,
        trunc(SHRTGPA.SHRTGPA_GPA,3) as SHRTGPA_SEMESTER_GPA,
        trunc(SHRLGPA.SHRLGPA_GPA,3) as SHRLGPA_CUMULATIVE_GPA

    from
        SHRTGPA SHRTGPA

        left outer join SHRLGPA SHRLGPA on SHRLGPA.SHRLGPA_PIDM = SHRTGPA.SHRTGPA_PIDM
            and SHRLGPA.SHRLGPA_GPA_TYPE_IND = 'I'
            and SHRLGPA.SHRLGPA_LEVL_CODE = SHRTGPA.SHRTGPA_LEVL_CODE
        left outer join SFRTHST SFRTHST on SFRTHST.SFRTHST_PIDM = SHRTGPA.SHRTGPA_PIDM
            and SFRTHST.SFRTHST_TERM_CODE = SHRTGPA.SHRTGPA_TERM_CODE
            and SFRTHST.SFRTHST_SURROGATE_ID = (select max(SFRTHST_SURROGATE_ID)
                                               from SFRTHST SFRTHSTX
                                               where SFRTHSTX.SFRTHST_PIDM = SFRTHST.SFRTHST_PIDM
                                               and SFRTHSTX.SFRTHST_TERM_CODE = SFRTHST.SFRTHST_TERM_CODE)

    where
        SHRTGPA.SHRTGPA_GPA_TYPE_IND = 'I'
    )

select
        --(STVTERM_ACYR_CODE - 1 )|| ' - '|| STVTERM_ACYR_CODE || ' Academic Year' as aid_year,
        --SHRDGMR_TERM_CODE_GRAD as Term,
        --STVTERM_DESC as Semester,
        SPRIDEN_ID as BANNER_ID,
        SPRIDEN_LEGAL_NAME as Student,
        SPRIDEN_LAST_NAME as LNAME,
        SPRIDEN_FIRST_NAME as FNAME,
        SPRIDEN_MI as MI,
        SPBPERS_PREF_FIRST_NAME as PREF_NAME,
        SPBPERS_AGE as AGE,
        SPBPERS_SEX as SEX,
        GORADID_ADDITIONAL_ID as SUID,
        GOREMAL_EMAIL_ADDRESS as Email,
        SHRDGMR_PIDM,
        SHRDGMR_SEQ_NO as Degree_Seq,
        SHRDGMR_DEGC_CODE as Degree_Code,
        SHRDGMR_DEGS_CODE as Degs_Status,
        SHRDGMR_LEVL_CODE as Level_Code,
        SHRDGMR_COLL_CODE_1 as Coll_Code,
        SHRDGMR_MAJR_CODE_1 as Majr_Code,
        SHRDGMR_APPL_DATE as Application_Date,
        SHRDGMR_GRAD_DATE as Grad_Date,
        SHRDGMR_ACYR_CODE as Grad_Yr,
        SHRDGMR_ACYR_CODE_BULLETIN as Bulletin_Acad_Yr,
        SHRDGMR_DEGS_DESC as Degs_Status_Desc,
        SHRDGMR_DEGC_DESC as Degree_Desc,
        SHRDGMR_LEVL_DESC as Levl_Desc,
        SHRDGMR_MAJR_DESC as Majr_Desc,
        GORRACE_RACE_CDE as Race_Code,
        GORRACE_DESC Race_Desc,

        SPBPERS.SPBPERS_ETHN_CDE as ETHN_CODE,
        STVETHN_DESC as ETHN_DESC,
        case
          when SPBPERS_ETHN_CDE in (2,3,4,5,6,7,9,10) then 'Y'
            else 'N'
              end as SPBPERS_SICAS_HISP_ORIGIN,
        SPBPERS.SPBPERS_CITZ_CODE as CITZ_CODE,
        SPBPERS_CITZ_COUNTRY as CITZ_COUNTRY,
        GOBINTL_NATN_CODE_BIRTH as BIRTH_NATN_CODE,
        GOBINTL_BIRTH_NATN as BIRTH_NATN,
        extract(MONTH from(SHRDGMR_GRAD_DATE)) as GRAD_MONTH_SORT,
        SPRIDEN.SPRIDEN_SEARCH_LAST_NAME as LNAME_SORT,
        SPRIDEN.SPRIDEN_SEARCH_FIRST_NAME as FNAME_SORT

from
        SHADEGR SHRDGMR
        LEFT OUTER JOIN SPAIDEN SPRIDEN ON SPRIDEN.SPRIDEN_PIDM = SHRDGMR.SHRDGMR_PIDM
        LEFT OUTER JOIN SPAPERS SPBPERS ON SPBPERS.SPBPERS_PIDM = SPRIDEN.SPRIDEN_PIDM
        left outer join STVETHN on STVETHN_CODE = SPBPERS.SPBPERS_ETHN_CDE
        LEFT OUTER JOIN GOARACE GORPRAC ON GORPRAC.GORPRAC_PIDM = SPRIDEN_PIDM
        --LEFT OUTER JOIN GOBINTL GOBINTL ON GOBINTL.GOBINTL_PIDM = SPRIDEN.SPRIDEN_PIDM
        LEFT OUTER JOIN SOREMAL GOREMAL ON GOREMAL.GOREMAL_PIDM = SPRIDEN.SPRIDEN_PIDM

where
          SHRDGMR_ACYR_CODE =:select_term_code.AIDY_CODE
--          SHRDGMR_ACYR_CODE = '&Y'
          --SHRDGMR_ACYR_CODE <=

/*
AND SHRDGMR_TERM_CODE_GRAD LIKE '%%%%10'
AND SHRDGMR_TERM_CODE_GRAD LIKE '%%%%20'
AND SHRDGMR_TERM_CODE_GRAD LIKE '%%%%30'
AND SHRDGMR_TERM_CODE_GRAD LIKE '%%%%40'
AND SHRDGMR_TERM_CODE_GRAD LIKE '%%%%50'
*/



--$addfilter

--$beginorder

order by

        --SHRDGMR_TERM_CODE_GRAD,
        GRAD_MONTH_SORT,
        SHRDGMR_DEGC_CODE desc,
        SPRIDEN.SPRIDEN_SEARCH_LAST_NAME,
        SPRIDEN.SPRIDEN_SEARCH_FIRST_NAME

--$endorder
